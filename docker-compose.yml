version: '3'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  postgres:
    driver: ${VOLUMES_DRIVER}

services:

  app:
    build:
      context: .
      args:
        - USERNAME=${USERNAME}
        - USER_UID=${USER_UID}
    container_name: app
    environment:
      - DBENGINE=${DBENGINE}
      - DBHOST=${DBHOST}
      - DBPORT=${DBPORT}
      - DBUSER=${DBUSER}
      - DBPASS=${DBPASS}
      - DBNAME=${DBNAME}
    ports:
      - ${APP_EXTERNAL_PORT}:80
    networks:
      - backend

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    environment:
      - MYSQL_DATABASE=${DBNAME}
      - MYSQL_USER=${DBUSER}
      - MYSQL_PASSWORD=${DBPASS}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - ${MYSQL_EXTERNAL_PORT}:${DBPORT}
    volumes:
      - ./.docker/mysql/database.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql:/var/lib/mysql
    networks:
      - backend

  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: postgres
    environment:
      - POSTGRES_DB=${DBNAME}
      - POSTGRES_USER=${DBUSER}
      - POSTGRES_PASSWORD=${DBPASS}
    ports:
      - ${POSTGRES_EXTERNAL_PORT}:${DBPORT}
    volumes:
      - ./.docker/postgres/database.sql:/docker-entrypoint-initdb.d/init.sql
      - ./.docker/postgres/tables.sql:/tables.sql
      - postgres:/var/lib/postgresql/data
    networks:
      - backend

